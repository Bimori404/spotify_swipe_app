
// ------------------------------------------------------------------------------------- //

// card.querySelector('.accept').addEventListener('click', () => {
//     audioElement.pause(); // Pausar el audio al aceptar la tarjeta
//     card.classList.add('hide');
//     saveSong(track); // Guardar la canción en localStorage
//     setTimeout(() => {
//         card.remove();
//         checkForLastCard();
//     }, 300);
// });
// function saveSong(track) {
//     let savedSongs = JSON.parse(localStorage.getItem('saved_songs')) || [];
//     savedSongs.push({
//         name: track.name,
//         artists: track.artists.map(artist => artist.name),
//         preview_url: track.preview_url,
//         album_image: track.album.images[0].url
//     });
//     localStorage.setItem('saved_songs', JSON.stringify(savedSongs));
// }

// ------------------------------------------------------------------------------------- //

//     const audioElement = new Audio(track.preview_url);
//     const playPauseButton = card.querySelector('.play-pause');
//     const progressBar = card.querySelector('.progress-bar');

//     const durationText = card.querySelector('.duration');
//     const currentTimeText = card.querySelector('.currentTime');

//     playPauseButton.addEventListener('click', () => {
//         if (audioElement.paused) {
//             audioElement.play();
//             playPauseButton.innerHTML = '&#x2590;&#x2590;';
//         } else {
//             audioElement.pause();
//             playPauseButton.innerHTML = '&#x25B6;';
//         }
//     });

//     audioElement.addEventListener('timeupdate', () => {
//         const progress = (audioElement.currentTime / audioElement.duration) * 100;
//         progressBar.style.width = `${progress}%`;

//         const minutes = Math.floor(audioElement.currentTime / 60);
//         const seconds = Math.floor(audioElement.currentTime % 60);

//         const durationMinutes = Math.floor(audioElement.duration / 60);
//         const durationSeconds = Math.floor(audioElement.duration % 60);

//         // durationText.textContent = `${minutes}:${(seconds < 10 ? '0' : '')}${seconds} / ${durationMinutes}:${(durationSeconds < 10 ? '0' : '')}${durationSeconds}`;
//         durationText.textContent = `${minutes}:${(seconds < 10 ? '0' : '')}${seconds}`;
//         currentTimeText.textContent = `${durationMinutes}:${(durationSeconds < 10 ? '0' : '')}${durationSeconds}`;
//     });

//     return card;
// }

// ------------------------------------------------------------------------------------- //
// ------------------------------------------------------------------------------------- //
// obtenemos los datos del usuario
// document.addEventListener('DOMContentLoaded', () => {
//     const accessToken = localStorage.getItem('access_token');
//     if (accessToken) {
//         fetchUserInfo(accessToken);
//     }
// });
// async function fetchUserInfo(token) {
//     const url = 'https://api.spotify.com/v1/me';
//     try {
//         const response = await fetch(url, {
//             method: 'GET',
//             headers: {
//                 'Authorization': 'Bearer ' + token
//             }
//         });
//         if (!response.ok) {
//             throw new Error(`HTTP error! status: ${response.status}`);
//         }
//         const userData = await response.json();
//         console.log('Usuario de Spotify:', userData);
//     } catch (error) {
//         console.error('Error al obtener información del usuario:', error);
//     }
// }
// ------------------------------------------------------------------------------------- //
// playPauseBtn.textContent = '⏸️';
// playPauseBtn.textContent = '▶️';
// ------------------------------------------------------------------------------------- //
// function loginAsGuest() {
//     const guestCredentials = {
//         email: "bimoribusiness@gmail.com",
//         password: "accountSpoti1901"
//     };
//     // Aquí se debería implementar la lógica para autenticar al usuario invitado
//     // Dado que el flujo de autenticación con Spotify es diferente y seguro,
//     // esta parte necesita integrarse con un backend que maneje la autenticación.
//     // Este es solo un ejemplo simplificado.
//     authenticateUserWithEmailPassword(guestCredentials.email, guestCredentials.password);
// }
// function authenticateUserWithEmailPassword(email, password) {
//     // Esta función debería autenticar al usuario con el backend que maneje la autenticación
//     // Por ejemplo, se podría usar Firebase Authentication, Auth0, etc.
//     // Aquí sólo se muestra un ejemplo ficticio.
//     axios.post('https://example.com/authenticate', { email, password })
//         .then(res => {
//             if (res.data.success) {
//                 localStorage.setItem('access_token', res.data.access_token);
//                 localStorage.setItem('refresh_token', res.data.refresh_token);
//                 checkPlaylist(res.data.access_token);
//             } else {
//                 console.error('Error authenticating guest user');
//                 document.getElementById("loaderBackground").style.display = "none";
//             }
//         })
//         .catch(error => {
//             console.error('Error:', error);
//             document.getElementById("loaderBackground").style.display = "none";
//         });
// }
// ------------------------------------------------------------------------------------- //